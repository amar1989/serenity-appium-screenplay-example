/*
 * This file was generated by thePrivacyPolicy Gradle 'init' task.
 */

plugins {
    id 'java'
    id 'maven-publish'
}

repositories {
    mavenLocal()
    maven {
        url = 'http://dl.bintray.com/serenity/maven'
    }

    maven {
        url = 'http://repo.maven.apache.org/maven2'
    }
}

dependencies {
    compile 'org.apache.httpcomponents:httpclient:4.5.10'
    compile 'org.apache.commons:commons-text:1.8'
    compile 'org.apache.commons:commons-lang3:3.9'
    compile 'joda-time:joda-time:2.10.5'
    compile 'org.springframework:spring-context-support:5.2.1.RELEASE'
    compile 'com.google.code.gson:gson:2.8.6'
    compile 'org.eclipse.jetty:jetty-io:9.4.20.v20190813'
    compile 'org.eclipse.jetty:jetty-util:9.4.20.v20190813'
    compile 'net.serenity-bdd:serenity-core:2.0.83'
    compile 'net.serenity-bdd:serenity-screenplay:2.0.83'
    compile 'net.serenity-bdd:serenity-screenplay-webdriver:2.0.83'
    compile 'io.appium:java-client:7.2.0'
    compile 'com.browserstack:browserstack-local-java:1.0.3'
    compile 'net.serenity-bdd:serenity-junit:2.0.83'
    compile 'net.serenity-bdd:serenity-rest-assured:2.0.83'
    compile 'net.serenity-bdd:serenity-cucumber:1.9.37'
    compile 'org.slf4j:slf4j-simple:1.7.7'
    compile 'org.codehaus.groovy:groovy-all:1.8.6'
    compile 'com.googlecode.lambdaj:lambdaj:2.3.3'
    compile 'org.hamcrest:hamcrest-all:1.3'
    compile 'net.serenity-bdd:serenity-browserstack:2.0.83'
    compile 'com.amazonaws:aws-java-sdk-cognitoidp:1.11.633'
    compile 'net.serenity-bdd:serenity-model:2.0.83'
    compile 'net.serenity-bdd:serenity-report-resources:2.0.83'
    testCompile 'junit:junit:4.12'
    testCompile 'org.assertj:assertj-core:3.12.2'
    testCompile 'net.serenity-bdd:serenity-test-utils:2.0.83'
}

group = 'com.offline.city.map.serenity'
version = '1.0.0-SNAPSHOT'
description = 'Serenity Appium Screenplay Example Project'
sourceCompatibility = '1.8'

configurations.all {
}

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
